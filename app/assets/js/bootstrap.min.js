$(document).ready(function(){
  $('[data-toggle="tooltip"]').tooltip(); 
});

if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery");
!function (s) {
	"use strict";
	var n = function (t, e) {
		this.$element = s(t), this.options = s.extend({}, n.DEFAULTS, e), this.isLoading = !1
	};

	function i(o) {
		return this.each(function () {
			var t = s(this),
				e = t.data("bs.button"),
				i = "object" == typeof o && o;
			e || t.data("bs.button", e = new n(this, i)), "toggle" == o ? e.toggle() : o && e.setState(o)
		})
	}
	n.VERSION = "3.4.0", n.DEFAULTS = {
		loadingText: "loading..."
	}, n.prototype.setState = function (t) {
		var e = "disabled",
			i = this.$element,
			o = i.is("input") ? "val" : "html",
			n = i.data();
		t += "Text", null == n.resetText && i.data("resetText", i[o]()), setTimeout(s.proxy(function () {
			i[o](null == n[t] ? this.options[t] : n[t]), "loadingText" == t ? (this.isLoading = !0, i.addClass(e).attr(e, e).prop(e, !0)) : this.isLoading && (this.isLoading = !1, i.removeClass(e).removeAttr(e).prop(e, !1))
		}, this), 0)
	}, n.prototype.toggle = function () {
		var t = !0,
			e = this.$element.closest('[data-toggle="buttons"]');
		if (e.length) {
			var i = this.$element.find("input");
			"radio" == i.prop("type") ? (i.prop("checked") && (t = !1), e.find(".active").removeClass("active"), this.$element.addClass("active")) : "checkbox" == i.prop("type") && (i.prop("checked") !== this.$element.hasClass("active") && (t = !1), this.$element.toggleClass("active")), i.prop("checked", this.$element.hasClass("active")), t && i.trigger("change")
		} else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active")
	};
	var t = s.fn.button;
	s.fn.button = i, s.fn.button.Constructor = n, s.fn.button.noConflict = function () {
		return s.fn.button = t, this
	}, s(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function (t) {
		var e = s(t.target).closest(".btn");
		i.call(e, "toggle"), s(t.target).is('input[type="radio"], input[type="checkbox"]') || (t.preventDefault(), e.is("input,button") ? e.trigger("focus") : e.find("input:visible,button:visible").first().trigger("focus"))
	}).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function (t) {
		s(t.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(t.type))
	})
}(jQuery),
function (a) {
	"use strict";
	var r = function (t, e) {
		this.$element = a(t), this.options = a.extend({}, r.DEFAULTS, e), this.$trigger = a('[data-toggle="collapse"][href="#' + t.id + '"],[data-toggle="collapse"][data-target="#' + t.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle()
	};

	function n(t) {
		var e, i = t.attr("data-target") || (e = t.attr("href")) && e.replace(/.*(?=#[^\s]+$)/, "");
		return a(document).find(i)
	}

	function l(o) {
		return this.each(function () {
			var t = a(this),
				e = t.data("bs.collapse"),
				i = a.extend({}, r.DEFAULTS, t.data(), "object" == typeof o && o);
			!e && i.toggle && /show|hide/.test(o) && (i.toggle = !1), e || t.data("bs.collapse", e = new r(this, i)), "string" == typeof o && e[o]()
		})
	}
	r.VERSION = "3.4.0", r.TRANSITION_DURATION = 350, r.DEFAULTS = {
		toggle: !0
	}, r.prototype.dimension = function () {
		return this.$element.hasClass("width") ? "width" : "height"
	}, r.prototype.show = function () {
		if (!this.transitioning && !this.$element.hasClass("in")) {
			var t, e = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
			if (!(e && e.length && (t = e.data("bs.collapse")) && t.transitioning)) {
				var i = a.Event("show.bs.collapse");
				if (this.$element.trigger(i), !i.isDefaultPrevented()) {
					e && e.length && (l.call(e, "hide"), t || e.data("bs.collapse", null));
					var o = this.dimension();
					this.$element.removeClass("collapse").addClass("collapsing")[o](0).attr("aria-expanded", !0), this.$trigger.removeClass("collapsed").attr("aria-expanded", !0), this.transitioning = 1;
					var n = function () {
						this.$element.removeClass("collapsing").addClass("collapse in")[o](""), this.transitioning = 0, this.$element.trigger("shown.bs.collapse")
					};
					if (!a.support.transition) return n.call(this);
					var s = a.camelCase(["scroll", o].join("-"));
					this.$element.one("bsTransitionEnd", a.proxy(n, this)).emulateTransitionEnd(r.TRANSITION_DURATION)[o](this.$element[0][s])
				}
			}
		}
	}, r.prototype.hide = function () {
		if (!this.transitioning && this.$element.hasClass("in")) {
			var t = a.Event("hide.bs.collapse");
			if (this.$element.trigger(t), !t.isDefaultPrevented()) {
				var e = this.dimension();
				this.$element[e](this.$element[e]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", !1), this.$trigger.addClass("collapsed").attr("aria-expanded", !1), this.transitioning = 1;
				var i = function () {
					this.transitioning = 0, this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")
				};
				if (!a.support.transition) return i.call(this);
				this.$element[e](0).one("bsTransitionEnd", a.proxy(i, this)).emulateTransitionEnd(r.TRANSITION_DURATION)
			}
		}
	}, r.prototype.toggle = function () {
		this[this.$element.hasClass("in") ? "hide" : "show"]()
	}, r.prototype.getParent = function () {
		return a(document).find(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(a.proxy(function (t, e) {
			var i = a(e);
			this.addAriaAndCollapsedClass(n(i), i)
		}, this)).end()
	}, r.prototype.addAriaAndCollapsedClass = function (t, e) {
		var i = t.hasClass("in");
		t.attr("aria-expanded", i), e.toggleClass("collapsed", !i).attr("aria-expanded", i)
	};
	var t = a.fn.collapse;
	a.fn.collapse = l, a.fn.collapse.Constructor = r, a.fn.collapse.noConflict = function () {
		return a.fn.collapse = t, this
	}, a(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function (t) {
		var e = a(this);
		e.attr("data-target") || t.preventDefault();
		var i = n(e),
			o = i.data("bs.collapse") ? "toggle" : e.data();
		l.call(i, o)
	})
}(jQuery),
function (a) {
	"use strict";
	var r = '[data-toggle="dropdown"]',
		o = function (t) {
			a(t).on("click.bs.dropdown", this.toggle)
		};

	function l(t) {
		var e = t.attr("data-target");
		e || (e = (e = t.attr("href")) && /#[A-Za-z]/.test(e) && e.replace(/.*(?=#[^\s]*$)/, ""));
		var i = e && a(document).find(e);
		return i && i.length ? i : t.parent()
	}

	function s(o) {
		o && 3 === o.which || (a(".dropdown-backdrop").remove(), a(r).each(function () {
			var t = a(this),
				e = l(t),
				i = {
					relatedTarget: this
				};
			e.hasClass("open") && (o && "click" == o.type && /input|textarea/i.test(o.target.tagName) && a.contains(e[0], o.target) || (e.trigger(o = a.Event("hide.bs.dropdown", i)), o.isDefaultPrevented() || (t.attr("aria-expanded", "false"), e.removeClass("open").trigger(a.Event("hidden.bs.dropdown", i)))))
		}))
	}
	o.VERSION = "3.4.0", o.prototype.toggle = function (t) {
		var e = a(this);
		if (!e.is(".disabled, :disabled")) {
			var i = l(e),
				o = i.hasClass("open");
			if (s(), !o) {
				"ontouchstart" in document.documentElement && !i.closest(".navbar-nav").length && a(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(a(this)).on("click", s);
				var n = {
					relatedTarget: this
				};
				if (i.trigger(t = a.Event("show.bs.dropdown", n)), t.isDefaultPrevented()) return;
				e.trigger("focus").attr("aria-expanded", "true"), i.toggleClass("open").trigger(a.Event("shown.bs.dropdown", n))
			}
			return !1
		}
	}, o.prototype.keydown = function (t) {
		if (/(38|40|27|32)/.test(t.which) && !/input|textarea/i.test(t.target.tagName)) {
			var e = a(this);
			if (t.preventDefault(), t.stopPropagation(), !e.is(".disabled, :disabled")) {
				var i = l(e),
					o = i.hasClass("open");
				if (!o && 27 != t.which || o && 27 == t.which) return 27 == t.which && i.find(r).trigger("focus"), e.trigger("click");
				var n = i.find(".dropdown-menu li:not(.disabled):visible a");
				if (n.length) {
					var s = n.index(t.target);
					38 == t.which && 0 < s && s--, 40 == t.which && s < n.length - 1 && s++, ~s || (s = 0), n.eq(s).trigger("focus")
				}
			}
		}
	};
	var t = a.fn.dropdown;
	a.fn.dropdown = function e(i) {
		return this.each(function () {
			var t = a(this),
				e = t.data("bs.dropdown");
			e || t.data("bs.dropdown", e = new o(this)), "string" == typeof i && e[i].call(t)
		})
	}, a.fn.dropdown.Constructor = o, a.fn.dropdown.noConflict = function () {
		return a.fn.dropdown = t, this
	}, a(document).on("click.bs.dropdown.data-api", s).on("click.bs.dropdown.data-api", ".dropdown form", function (t) {
		t.stopPropagation()
	}).on("click.bs.dropdown.data-api", r, o.prototype.toggle).on("keydown.bs.dropdown.data-api", r, o.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", o.prototype.keydown)
}(jQuery),
function (a) {
	"use strict";
	var s = function (t, e) {
		this.options = e, this.$body = a(document.body), this.$element = a(t), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = !1, this.fixedContent = ".navbar-fixed-top, .navbar-fixed-bottom", this.options.remote && this.$element.find(".modal-content").load(this.options.remote, a.proxy(function () {
			this.$element.trigger("loaded.bs.modal")
		}, this))
	};

	function r(o, n) {
		return this.each(function () {
			var t = a(this),
				e = t.data("bs.modal"),
				i = a.extend({}, s.DEFAULTS, t.data(), "object" == typeof o && o);
			e || t.data("bs.modal", e = new s(this, i)), "string" == typeof o ? e[o](n) : i.show && e.show(n)
		})
	}
	s.VERSION = "3.4.0", s.TRANSITION_DURATION = 300, s.BACKDROP_TRANSITION_DURATION = 150, s.DEFAULTS = {
		backdrop: !0,
		keyboard: !0,
		show: !0
	}, s.prototype.toggle = function (t) {
		return this.isShown ? this.hide() : this.show(t)
	}, s.prototype.show = function (i) {
		var o = this,
			t = a.Event("show.bs.modal", {
				relatedTarget: i
			});
		this.$element.trigger(t), this.isShown || t.isDefaultPrevented() || (this.isShown = !0, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', a.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function () {
			o.$element.one("mouseup.dismiss.bs.modal", function (t) {
				a(t.target).is(o.$element) && (o.ignoreBackdropClick = !0)
			})
		}), this.backdrop(function () {
			var t = a.support.transition && o.$element.hasClass("fade");
			o.$element.parent().length || o.$element.appendTo(o.$body), o.$element.show().scrollTop(0), o.adjustDialog(), t && o.$element[0].offsetWidth, o.$element.addClass("in"), o.enforceFocus();
			var e = a.Event("shown.bs.modal", {
				relatedTarget: i
			});
			t ? o.$dialog.one("bsTransitionEnd", function () {
				o.$element.trigger("focus").trigger(e)
			}).emulateTransitionEnd(s.TRANSITION_DURATION) : o.$element.trigger("focus").trigger(e)
		}))
	}, s.prototype.hide = function (t) {
		t && t.preventDefault(), t = a.Event("hide.bs.modal"), this.$element.trigger(t), this.isShown && !t.isDefaultPrevented() && (this.isShown = !1, this.escape(), this.resize(), a(document).off("focusin.bs.modal"), this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), a.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", a.proxy(this.hideModal, this)).emulateTransitionEnd(s.TRANSITION_DURATION) : this.hideModal())
	}, s.prototype.enforceFocus = function () {
		a(document).off("focusin.bs.modal").on("focusin.bs.modal", a.proxy(function (t) {
			document === t.target || this.$element[0] === t.target || this.$element.has(t.target).length || this.$element.trigger("focus")
		}, this))
	}, s.prototype.escape = function () {
		this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", a.proxy(function (t) {
			27 == t.which && this.hide()
		}, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal")
	}, s.prototype.resize = function () {
		this.isShown ? a(window).on("resize.bs.modal", a.proxy(this.handleUpdate, this)) : a(window).off("resize.bs.modal")
	}, s.prototype.hideModal = function () {
		var t = this;
		this.$element.hide(), this.backdrop(function () {
			t.$body.removeClass("modal-open"), t.resetAdjustments(), t.resetScrollbar(), t.$element.trigger("hidden.bs.modal")
		})
	}, s.prototype.removeBackdrop = function () {
		this.$backdrop && this.$backdrop.remove(), this.$backdrop = null
	}, s.prototype.backdrop = function (t) {
		var e = this,
			i = this.$element.hasClass("fade") ? "fade" : "";
		if (this.isShown && this.options.backdrop) {
			var o = a.support.transition && i;
			if (this.$backdrop = a(document.createElement("div")).addClass("modal-backdrop " + i).appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", a.proxy(function (t) {
					this.ignoreBackdropClick ? this.ignoreBackdropClick = !1 : t.target === t.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide())
				}, this)), o && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !t) return;
			o ? this.$backdrop.one("bsTransitionEnd", t).emulateTransitionEnd(s.BACKDROP_TRANSITION_DURATION) : t()
		} else if (!this.isShown && this.$backdrop) {
			this.$backdrop.removeClass("in");
			var n = function () {
				e.removeBackdrop(), t && t()
			};
			a.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", n).emulateTransitionEnd(s.BACKDROP_TRANSITION_DURATION) : n()
		} else t && t()
	}, s.prototype.handleUpdate = function () {
		this.adjustDialog()
	}, s.prototype.adjustDialog = function () {
		var t = this.$element[0].scrollHeight > document.documentElement.clientHeight;
		this.$element.css({
			paddingLeft: !this.bodyIsOverflowing && t ? this.scrollbarWidth : "",
			paddingRight: this.bodyIsOverflowing && !t ? this.scrollbarWidth : ""
		})
	}, s.prototype.resetAdjustments = function () {
		this.$element.css({
			paddingLeft: "",
			paddingRight: ""
		})
	}, s.prototype.checkScrollbar = function () {
		var t = window.innerWidth;
		if (!t) {
			var e = document.documentElement.getBoundingClientRect();
			t = e.right - Math.abs(e.left)
		}
		this.bodyIsOverflowing = document.body.clientWidth < t, this.scrollbarWidth = this.measureScrollbar()
	}, s.prototype.setScrollbar = function () {
		var t = parseInt(this.$body.css("padding-right") || 0, 10);
		this.originalBodyPad = document.body.style.paddingRight || "";
		var n = this.scrollbarWidth;
		this.bodyIsOverflowing && (this.$body.css("padding-right", t + n), a(this.fixedContent).each(function (t, e) {
			var i = e.style.paddingRight,
				o = a(e).css("padding-right");
			a(e).data("padding-right", i).css("padding-right", parseFloat(o) + n + "px")
		}))
	}, s.prototype.resetScrollbar = function () {
		this.$body.css("padding-right", this.originalBodyPad), a(this.fixedContent).each(function (t, e) {
			var i = a(e).data("padding-right");
			a(e).removeData("padding-right"), e.style.paddingRight = i || ""
		})
	}, s.prototype.measureScrollbar = function () {
		var t = document.createElement("div");
		t.className = "modal-scrollbar-measure", this.$body.append(t);
		var e = t.offsetWidth - t.clientWidth;
		return this.$body[0].removeChild(t), e
	};
	var t = a.fn.modal;
	a.fn.modal = r, a.fn.modal.Constructor = s, a.fn.modal.noConflict = function () {
		return a.fn.modal = t, this
	}, a(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function (t) {
		var e = a(this),
			i = e.attr("href"),
			o = e.attr("data-target") || i && i.replace(/.*(?=#[^\s]+$)/, ""),
			n = a(document).find(o),
			s = n.data("bs.modal") ? "toggle" : a.extend({
				remote: !/#/.test(i) && i
			}, n.data(), e.data());
		e.is("a") && t.preventDefault(), n.one("show.bs.modal", function (t) {
			t.isDefaultPrevented() || n.one("hidden.bs.modal", function () {
				e.is(":visible") && e.trigger("focus")
			})
		}), r.call(n, s, this)
	})
 } (jQuery),
function (g) {
	"use strict";
	var m = function (t, e) {
		this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", t, e)
	};
	m.VERSION = "3.4.0", m.TRANSITION_DURATION = 150, m.DEFAULTS = {
		animation: !0,
		placement: "top",
		selector: !1,
		template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
		trigger: "hover focus",
		title: "",
		delay: 0,
		html: !1,
		container: !1,
		viewport: {
			selector: "body",
			padding: 0
		}
	}, m.prototype.init = function (t, e, i) {
		if (this.enabled = !0, this.type = t, this.$element = g(e), this.options = this.getOptions(i), this.$viewport = this.options.viewport && g(document).find(g.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = {
				click: !1,
				hover: !1,
				focus: !1
			}, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
		for (var o = this.options.trigger.split(" "), n = o.length; n--;) {
			var s = o[n];
			if ("click" == s) this.$element.on("click." + this.type, this.options.selector, g.proxy(this.toggle, this));
			else if ("manual" != s) {
				var a = "hover" == s ? "mouseenter" : "focusin",
					r = "hover" == s ? "mouseleave" : "focusout";
				this.$element.on(a + "." + this.type, this.options.selector, g.proxy(this.enter, this)), this.$element.on(r + "." + this.type, this.options.selector, g.proxy(this.leave, this))
			}
		}
		this.options.selector ? this._options = g.extend({}, this.options, {
			trigger: "manual",
			selector: ""
		}) : this.fixTitle()
	}, m.prototype.getDefaults = function () {
		return m.DEFAULTS
	}, m.prototype.getOptions = function (t) {
		return (t = g.extend({}, this.getDefaults(), this.$element.data(), t)).delay && "number" == typeof t.delay && (t.delay = {
			show: t.delay,
			hide: t.delay
		}), t
	}, m.prototype.getDelegateOptions = function () {
		var i = {},
			o = this.getDefaults();
		return this._options && g.each(this._options, function (t, e) {
			o[t] != e && (i[t] = e)
		}), i
	}, m.prototype.enter = function (t) {
		var e = t instanceof this.constructor ? t : g(t.currentTarget).data("bs." + this.type);
		if (e || (e = new this.constructor(t.currentTarget, this.getDelegateOptions()), g(t.currentTarget).data("bs." + this.type, e)), t instanceof g.Event && (e.inState["focusin" == t.type ? "focus" : "hover"] = !0), e.tip().hasClass("in") || "in" == e.hoverState) e.hoverState = "in";
		else {
			if (clearTimeout(e.timeout), e.hoverState = "in", !e.options.delay || !e.options.delay.show) return e.show();
			e.timeout = setTimeout(function () {
				"in" == e.hoverState && e.show()
			}, e.options.delay.show)
		}
	}, m.prototype.isInStateTrue = function () {
		for (var t in this.inState)
			if (this.inState[t]) return !0;
		return !1
	}, m.prototype.leave = function (t) {
		var e = t instanceof this.constructor ? t : g(t.currentTarget).data("bs." + this.type);
		if (e || (e = new this.constructor(t.currentTarget, this.getDelegateOptions()), g(t.currentTarget).data("bs." + this.type, e)), t instanceof g.Event && (e.inState["focusout" == t.type ? "focus" : "hover"] = !1), !e.isInStateTrue()) {
			if (clearTimeout(e.timeout), e.hoverState = "out", !e.options.delay || !e.options.delay.hide) return e.hide();
			e.timeout = setTimeout(function () {
				"out" == e.hoverState && e.hide()
			}, e.options.delay.hide)
		}
	}, m.prototype.show = function () {
		var t = g.Event("show.bs." + this.type);
		if (this.hasContent() && this.enabled) {
			this.$element.trigger(t);
			var e = g.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
			if (t.isDefaultPrevented() || !e) return;
			var i = this,
				o = this.tip(),
				n = this.getUID(this.type);
			this.setContent(), o.attr("id", n), this.$element.attr("aria-describedby", n), this.options.animation && o.addClass("fade");
			var s = "function" == typeof this.options.placement ? this.options.placement.call(this, o[0], this.$element[0]) : this.options.placement,
				a = /\s?auto?\s?/i,
				r = a.test(s);
			r && (s = s.replace(a, "") || "top"), o.detach().css({
				top: 0,
				left: 0,
				display: "block"
			}).addClass(s).data("bs." + this.type, this), this.options.container ? o.appendTo(g(document).find(this.options.container)) : o.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type);
			var l = this.getPosition(),
				h = o[0].offsetWidth,
				d = o[0].offsetHeight;
			if (r) {
				var p = s,
					c = this.getPosition(this.$viewport);
				s = "bottom" == s && l.bottom + d > c.bottom ? "top" : "top" == s && l.top - d < c.top ? "bottom" : "right" == s && l.right + h > c.width ? "left" : "left" == s && l.left - h < c.left ? "right" : s, o.removeClass(p).addClass(s)
			}
			var f = this.getCalculatedOffset(s, l, h, d);
			this.applyPlacement(f, s);
			var u = function () {
				var t = i.hoverState;
				i.$element.trigger("shown.bs." + i.type), i.hoverState = null, "out" == t && i.leave(i)
			};
			g.support.transition && this.$tip.hasClass("fade") ? o.one("bsTransitionEnd", u).emulateTransitionEnd(m.TRANSITION_DURATION) : u()
		}
	}, m.prototype.applyPlacement = function (t, e) {
		var i = this.tip(),
			o = i[0].offsetWidth,
			n = i[0].offsetHeight,
			s = parseInt(i.css("margin-top"), 10),
			a = parseInt(i.css("margin-left"), 10);
		isNaN(s) && (s = 0), isNaN(a) && (a = 0), t.top += s, t.left += a, g.offset.setOffset(i[0], g.extend({
			using: function (t) {
				i.css({
					top: Math.round(t.top),
					left: Math.round(t.left)
				})
			}
		}, t), 0), i.addClass("in");
		var r = i[0].offsetWidth,
			l = i[0].offsetHeight;
		"top" == e && l != n && (t.top = t.top + n - l);
		var h = this.getViewportAdjustedDelta(e, t, r, l);
		h.left ? t.left += h.left : t.top += h.top;
		var d = /top|bottom/.test(e),
			p = d ? 2 * h.left - o + r : 2 * h.top - n + l,
			c = d ? "offsetWidth" : "offsetHeight";
		i.offset(t), this.replaceArrow(p, i[0][c], d)
	}, m.prototype.replaceArrow = function (t, e, i) {
		this.arrow().css(i ? "left" : "top", 50 * (1 - t / e) + "%").css(i ? "top" : "left", "")
	}, m.prototype.setContent = function () {
		var t = this.tip(),
			e = this.getTitle();
		t.find(".tooltip-inner")[this.options.html ? "html" : "text"](e), t.removeClass("fade in top bottom left right")
	}, m.prototype.hide = function (t) {
		var e = this,
			i = g(this.$tip),
			o = g.Event("hide.bs." + this.type);

		function n() {
			"in" != e.hoverState && i.detach(), e.$element && e.$element.removeAttr("aria-describedby").trigger("hidden.bs." + e.type), t && t()
		}
		if (this.$element.trigger(o), !o.isDefaultPrevented()) return i.removeClass("in"), g.support.transition && i.hasClass("fade") ? i.one("bsTransitionEnd", n).emulateTransitionEnd(m.TRANSITION_DURATION) : n(), this.hoverState = null, this
	}, m.prototype.fixTitle = function () {
		var t = this.$element;
		(t.attr("title") || "string" != typeof t.attr("data-original-title")) && t.attr("data-original-title", t.attr("title") || "").attr("title", "")
	}, m.prototype.hasContent = function () {
		return this.getTitle()
	}, m.prototype.getPosition = function (t) {
		var e = (t = t || this.$element)[0],
			i = "BODY" == e.tagName,
			o = e.getBoundingClientRect();
		null == o.width && (o = g.extend({}, o, {
			width: o.right - o.left,
			height: o.bottom - o.top
		}));
		var n = window.SVGElement && e instanceof window.SVGElement,
			s = i ? {
				top: 0,
				left: 0
			} : n ? null : t.offset(),
			a = {
				scroll: i ? document.documentElement.scrollTop || document.body.scrollTop : t.scrollTop()
			},
			r = i ? {
				width: g(window).width(),
				height: g(window).height()
			} : null;
		return g.extend({}, o, a, r, s)
	}, m.prototype.getCalculatedOffset = function (t, e, i, o) {
		return "bottom" == t ? {
			top: e.top + e.height,
			left: e.left + e.width / 2 - i / 2
		} : "top" == t ? {
			top: e.top - o,
			left: e.left + e.width / 2 - i / 2
		} : "left" == t ? {
			top: e.top + e.height / 2 - o / 2,
			left: e.left - i
		} : {
			top: e.top + e.height / 2 - o / 2,
			left: e.left + e.width
		}
	}, m.prototype.getViewportAdjustedDelta = function (t, e, i, o) {
		var n = {
			top: 0,
			left: 0
		};
		if (!this.$viewport) return n;
		var s = this.options.viewport && this.options.viewport.padding || 0,
			a = this.getPosition(this.$viewport);
		if (/right|left/.test(t)) {
			var r = e.top - s - a.scroll,
				l = e.top + s - a.scroll + o;
			r < a.top ? n.top = a.top - r : l > a.top + a.height && (n.top = a.top + a.height - l)
		} else {
			var h = e.left - s,
				d = e.left + s + i;
			h < a.left ? n.left = a.left - h : d > a.right && (n.left = a.left + a.width - d)
		}
		return n
	}, m.prototype.getTitle = function () {
		var t = this.$element,
			e = this.options;
		return t.attr("data-original-title") || ("function" == typeof e.title ? e.title.call(t[0]) : e.title)
	}, m.prototype.getUID = function (t) {
		for (; t += ~~(1e6 * Math.random()), document.getElementById(t););
		return t
	}, m.prototype.tip = function () {
		if (!this.$tip && (this.$tip = g(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
		return this.$tip
	}, m.prototype.arrow = function () {
		return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")
	}, m.prototype.enable = function () {
		this.enabled = !0
	}, m.prototype.disable = function () {
		this.enabled = !1
	}, m.prototype.toggleEnabled = function () {
		this.enabled = !this.enabled
	}, m.prototype.toggle = function (t) {
		var e = this;
		t && ((e = g(t.currentTarget).data("bs." + this.type)) || (e = new this.constructor(t.currentTarget, this.getDelegateOptions()), g(t.currentTarget).data("bs." + this.type, e))), t ? (e.inState.click = !e.inState.click, e.isInStateTrue() ? e.enter(e) : e.leave(e)) : e.tip().hasClass("in") ? e.leave(e) : e.enter(e)
	}, m.prototype.destroy = function () {
		var t = this;
		clearTimeout(this.timeout), this.hide(function () {
			t.$element.off("." + t.type).removeData("bs." + t.type), t.$tip && t.$tip.detach(), t.$tip = null, t.$arrow = null, t.$viewport = null, t.$element = null
		})
	};
	var t = g.fn.tooltip;
	g.fn.tooltip = function e(o) {
		return this.each(function () {
			var t = g(this),
				e = t.data("bs.tooltip"),
				i = "object" == typeof o && o;
			!e && /destroy|hide/.test(o) || (e || t.data("bs.tooltip", e = new m(this, i)), "string" == typeof o && e[o]())
		})
	}, g.fn.tooltip.Constructor = m, g.fn.tooltip.noConflict = function () {
		return g.fn.tooltip = t, this
	}
}(jQuery),
function (n) {
	"use strict";
	var s = function (t, e) {
		this.init("popover", t, e)
	};
	if (!n.fn.tooltip) throw new Error("Popover requires tooltip.js");
	s.VERSION = "3.4.0", s.DEFAULTS = n.extend({}, n.fn.tooltip.Constructor.DEFAULTS, {
		placement: "right",
		trigger: "click",
		content: "",
		template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
	}), ((s.prototype = n.extend({}, n.fn.tooltip.Constructor.prototype)).constructor = s).prototype.getDefaults = function () {
		return s.DEFAULTS
	}, s.prototype.setContent = function () {
		var t = this.tip(),
			e = this.getTitle(),
			i = this.getContent();
		t.find(".popover-title")[this.options.html ? "html" : "text"](e), t.find(".popover-content").children().detach().end()[this.options.html ? "string" == typeof i ? "html" : "append" : "text"](i), t.removeClass("fade top bottom left right in"), t.find(".popover-title").html() || t.find(".popover-title").hide()
	}, s.prototype.hasContent = function () {
		return this.getTitle() || this.getContent()
	}, s.prototype.getContent = function () {
		var t = this.$element,
			e = this.options;
		return t.attr("data-content") || ("function" == typeof e.content ? e.content.call(t[0]) : e.content)
	}, s.prototype.arrow = function () {
		return this.$arrow = this.$arrow || this.tip().find(".arrow")
	};
	var t = n.fn.popover;
	n.fn.popover = function e(o) {
		return this.each(function () {
			var t = n(this),
				e = t.data("bs.popover"),
				i = "object" == typeof o && o;
			!e && /destroy|hide/.test(o) || (e || t.data("bs.popover", e = new s(this, i)), "string" == typeof o && e[o]())
		})
	}, n.fn.popover.Constructor = s, n.fn.popover.noConflict = function () {
		return n.fn.popover = t, this
	}
}(jQuery);
